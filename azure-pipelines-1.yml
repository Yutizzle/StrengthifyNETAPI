# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cc959d27-4465-443a-b095-c56a8fa3c7fc'
  imageRepository: 'strengthifynetapi'
  containerRegistry: 'strengthifycontainerregistry.azurecr.io'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'strengthifycontainerregistry9386155a-auth'
  kubernetesServiceConnection: 'StrengthifyCluster-default'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'

pool:
  vmImage: windows11
  name: Default

steps:
  # Build .NET Core API application
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '$(System.DefaultWorkingDirectory)\src\*.csproj'

  # Test .NET Core API application
  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        StrengthifyNETAPI.Tests.dll
      searchFolder: '$(System.DefaultWorkingDirectory)\tests\bin\Debug\net6.0'

  # Run Docker Containers and Upload to Registry
  - task: DockerCompose@0
    displayName: 'Build Docker Images'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure subscription 1(66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4)'
      azureContainerRegistry: '{"loginServer":"strengthifycontainerregistry.azurecr.io", "id" : "/subscriptions/66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4/resourceGroups/strengthify-rg/providers/Microsoft.ContainerRegistry/registries/strengthifycontainerregistry"}'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      additionalImageTags: $(Build.BuildId)
      action: 'Build services'
  - task: DockerCompose@0
    displayName: 'Push Docker Images'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure subscription 1(66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4)'
      azureContainerRegistry: '{"loginServer":"strengthifycontainerregistry.azurecr.io", "id" : "/subscriptions/66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4/resourceGroups/strengthify-rg/providers/Microsoft.ContainerRegistry/registries/strengthifycontainerregistry"}'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      additionalImageTags: $(Build.BuildId)
      action: 'Push services'
  - task: DockerCompose@0
    displayName: 'Lock Docker Images'
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure subscription 1(66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4)'
      azureContainerRegistry: '{"loginServer":"strengthifycontainerregistry.azurecr.io", "id" : "/subscriptions/66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4/resourceGroups/strengthify-rg/providers/Microsoft.ContainerRegistry/registries/strengthifycontainerregistry"}'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Lock services'
      outputDockerComposeFile: '$(Build.StagingDirectory)/docker-compose.yml'
      
  - upload: manifests
    artifact: manifests
    
  - task: KubernetesManifest@0
    displayName: Create imagePullSecret
    inputs:
      action: createSecret
      secretName: $(imagePullSecret)
      dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
      kubernetesServiceConnection: $(kubernetesServiceConnection)

  - task: KubernetesManifest@0
    displayName: Deploy to Kubernetes cluster
    inputs:
      action: deploy
      manifests: |
        $(Build.SourcesDirectory)/manifests/deployment.yml
        $(Build.SourcesDirectory)/manifests/service.yml
      imagePullSecrets: |
        $(imagePullSecret)
      containers: |
        $(containerRegistry)/$(imageRepository):$(Build.BuildId)
      kubernetesServiceConnection: $(kubernetesServiceConnection)
