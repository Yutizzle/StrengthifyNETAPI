# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7b67eb76-e2d2-4671-b5e2-09353d1c7c71'
  kubernetesServiceConnection: 'StrengthifyCluster-default'
  imageRepository: 'strengthify'
  containerRegistry: 'strengthifycontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'strengthifycontainerregistry1025de8a-auth'

pool:
  vmImage: windows11
  name: Default

steps:
  # Build .NET Core API application
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '$(System.DefaultWorkingDirectory)\src\*.csproj'

  # Test .NET Core API application
  - task: VSTest@2
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        StrengthifyNETAPI.Tests.dll
      searchFolder: '$(System.DefaultWorkingDirectory)\tests\bin\Debug\net6.0'

  # Build Docker Image and Upload to Registry
  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: $(imageRepository)
      dockerfile: $(dockerfilePath)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)

  # Run Docker Containers and Upload to Registry
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure subscription 1(66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4)'
      azureContainerRegistry: '{"loginServer":"strengthifycontainerregistry.azurecr.io", "id" : "/subscriptions/66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4/resourceGroups/strengthify-rg/providers/Microsoft.ContainerRegistry/registries/strengthifycontainerregistry"}'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      action: 'Build services'
  - task: DockerCompose@0
    inputs:
      containerregistrytype: 'Azure Container Registry'
      azureSubscription: 'Azure subscription 1(66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4)'
      azureContainerRegistry: '{"loginServer":"strengthifycontainerregistry.azurecr.io", "id" : "/subscriptions/66a6a688-1c7f-4f4f-a3dd-cecf7b8f02e4/resourceGroups/strengthify-rg/providers/Microsoft.ContainerRegistry/registries/strengthifycontainerregistry"}'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
      action: 'Push services'

  - upload: manifests
    artifact: manifests
    
  - task: KubernetesManifest@0
    displayName: Create imagePullSecret
    inputs:
      action: createSecret
      secretName: $(imagePullSecret)
      dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
      kubernetesServiceConnection: $(kubernetesServiceConnection)

  - task: KubernetesManifest@0
    displayName: Deploy to Kubernetes cluster
    inputs:
      action: deploy
      manifests: |
        $(Build.SourcesDirectory)/manifests/deployment.yml
        $(Build.SourcesDirectory)/manifests/service.yml
      imagePullSecrets: |
        $(imagePullSecret)
      containers: |
        $(containerRegistry)/$(imageRepository):$(tag)
      kubernetesServiceConnection: $(kubernetesServiceConnection)
